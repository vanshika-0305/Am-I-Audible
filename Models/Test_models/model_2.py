# -*- coding: utf-8 -*-
"""model_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BU4s5lnUeXRj4dIt9QlHYsJhAyJCSjtV
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
X = np.load('/content/drive/MyDrive/preprocessed_audio_X.npy')
y = np.load('/content/drive/MyDrive/preprocessed_labels_y.npy')

import librosa
import librosa.display
import matplotlib.pyplot as plt
import numpy as np

def audio_to_spectrogram(audio, sr=22050, n_fft=2048, hop_length=512):
    # Compute STFT
    stft = librosa.stft(audio, n_fft=n_fft, hop_length=hop_length)
    # Convert to dB scale
    spectrogram = librosa.amplitude_to_db(np.abs(stft), ref=np.max)
    return spectrogram
spectrograms = []
for audio in X:
    audio = np.array(audio)
    spec = audio_to_spectrogram(audio)
    spectrograms.append(spec)
X_spec = np.array(spectrograms)

print("Spectrograms shape:", X_spec.shape)  # (num_samples, freq_bins, time_steps)

def plot_spectrogram_with_label(spectrogram, label, sr=22050, hop_length=512):
    # Ensure the spectrogram is 2D by removing extra dimensions
    spectrogram = np.squeeze(spectrogram)
    plt.figure(figsize=(10, 4))
    librosa.display.specshow(spectrogram, sr=sr, hop_length=hop_length, x_axis='time', y_axis='log')
    plt.colorbar(format='%+2.0f dB')
    plt.title(f'Spectrogram (Label: {label})')
    plt.show()

plot_spectrogram_with_label(X_spec[0], y[0])

plot_spectrogram_with_label(X_spec[100], y[100])

len(X_spec)

len(y)

plot_spectrogram_with_label(X_spec[1000], y[1000])

plot_spectrogram_with_label(X_spec[4500], y[4500])

plot_spectrogram_with_label(X_spec[1200], y[1200])

plot_spectrogram_with_label(X_spec[2500], y[2500])

